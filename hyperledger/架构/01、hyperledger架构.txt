一、	Hyperledger架构
包括三大类别：会员制(Membership)，区块链(Blockchan)和链码(chaincode)。属于逻辑结构。
分布式账本运用RocksDB保存数据集。大型文件存储在区块链账本之外的贮存库中，其散列值作为交易的一部分存放到链内，以保证文件的完整性。
1、成员服务
成员服务为网络提供身份管理，隐私，保密和可审计性的服务。在一个不带权限的区块链中，参与者是不需要被授权的，且所有的节点都可以同样的提交交易并把它们汇集到可接受的块中，如：它们没有角色的区分。成员服务通过公钥基础设施(Public Key Infrastructure 
(PKI))和去中心化的/共识技术使得不带权限的区块链变成带权限的区块链。在后者中，通过实体注册来获得长时间的，可能根据实体类型生成的身份凭证（登记证书enrollment certificates）。在用户使用过程中，这样的证书允许交易证书颁发机构（Transaction Certificate Authority 
(TCA)）颁发匿名证书。这样的证书，如交易证书，被用来对提交交易授权。交易证书存储在区块链中，并对审计集群授权，否则交易是不可链接的。
2、区块链服务
区块链服务通过 HTTP/2 上的点对点（peer-to-peer）协议来管理分布式总账。为了提供最高效的哈希算法来维护世界状态的复制，数据结构进行了高度的优化。每个部署中可以插入和配置不同的共识算法（PBFT, Raft, PoW, PoS）。
3、链码服务
链码服务提供一个安全的，轻量的沙箱在验证节点上执行链码。环境是一个“锁定的”且安全的包含签过名的安全操作系统镜像和链码语言，Go，Java 和 Node.js 的运行时和 SDK 层。可以根据需要来启用其他语言。
4、事件
验证 peers 和链码可以向在网络上监听并采取行动的应用发送事件。这是一些预定义好的事件集合，链码可以生成客户化的事件。事件会被一个或多个事件适配器消费。之后适配器可能会把事件投递到其他设备，如 Web hooks 或 Kafka。
二、应用编程界面
Hyperledger包括了rest、json rpc应用程序界面、事件和连接网络的应用程序软件开发工具包。Hyperledger有一套命令行界面(CLI)来管理运行网络。这套命令行界面也可以用于链上代码测试过程中。Rest应用程序界面以及软件开发工具高(SDK)是建立在JSON-RPC应用程序界面上的，也是最完整的应用程序界面层。软件开发工具包能适用于golang、javascript、java等语言中。
1、应用编程接口(API)
fabric的主要接口是 REST API，并通过 Swagger 2.0 来改变。API 允许注册用户，区块链查询和发布交易。链码与执行交易的堆间的交互和交易的结果查询会由 API 集合来规范。
2、命令行界面(CLI)
CLI包含REST API的一个子集使得开发者能更快的测试链码或查询交易状态。CLI 是通过 Go 语言来实现，并可在多种操作系统上操作。
这一应用程序界面分为以下几类：
1，	身份识别  通过登记来获得或撤销认证
2，	寻址  定位并追踪交易来源
3，	交易  账本上的执行单元
4，	链上代码  在区块链上运行的程序
5，	区块链  账本的内容
6，	网络  区块链网络的信息
7，	存储库  文件或文档的外部储存
8，	时间  区块链上的订阅或发行事件

二、	应用模型
MVC-B  模型、视图、控制器、区块链
